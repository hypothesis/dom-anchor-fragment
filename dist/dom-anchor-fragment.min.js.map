{"version":3,"sources":["dom-anchor-fragment.js"],"names":["global","factory","define","amd","exports","module","mod","domAnchorFragment","this","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","FragmentAnchor","id","undefined","Error","value","type","el","document","getElementById","range","createRange","selectNode","selector"],"mappings":"CAAA,SAAWA,EAAQC,GACjB,GAAsB,kBAAXC,SAAyBA,OAAOC,IACzCD,QAAQ,UAAW,UAAWD,OACzB,IAAuB,mBAAZG,UAA6C,mBAAXC,QAClDJ,EAAQG,QAASC,YACZ,CACL,GAAIC,IACFF,WAEFH,GAAQK,EAAIF,QAASE,GACrBN,EAAOO,kBAAoBD,EAAIF,UAEhCI,KAAM,SAAUJ,EAASC,GAQ1B,YAIA,SAASI,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAFhH,GAAIC,GAAe,WAAe,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,MAAO,UAAUR,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYZ,EAAiBH,EAAYiB,UAAWF,GAAiBC,GAAab,EAAiBH,EAAagB,GAAqBhB,MAf9gBkB,EAAc,WACtB,QADQA,GACPC,GACV,GAmBErB,EAAgBD,KArBDqB,GAENE,SAAPD,EACF,KAAM,IAAIE,OAAM,kCAElBxB,MAAKsB,GAAKA,EAwDV,MAhCAjB,GA7BiBgB,IA8BfJ,IAAK,aACLQ,MAXM,WACR,OACEC,KAAM,mBACND,MAAOzB,KAAKsB,OAeZL,IAAK,UACLQ,MAZG,WACL,GAAIE,GAAKnC,OAAOoC,SAASC,eAAe7B,KAAKsB,IACzCQ,EAAQtC,OAAOoC,SAASG,aAE5B,OADAD,GAAME,WAAWL,GACVG,OAeLb,IAAK,YACLQ,MAvCY,SAACK,GAEf,MAAO,IAAIT,GAAeC,OA0CxBL,IAAK,eACLQ,MAxCe,SAACQ,GAClB,GAAiBV,SAAbU,EACF,KAAM,IAAIT,OAAM,wCAElB,OAAO,IAAIH,GAAeY,EAASR,WAjBlBJ,IAgEnBxB,GAAOD,QAhEYyB","file":"dom-anchor-fragment.min.js","sourcesContent":["/**\n* class:: FragmentAnchor(id)\n*\n* An anchor representing a fragment identifier.\n*\n* :param String id: The id of the fragment identified by the anchor.\n*/\nexport default class FragmentAnchor {\n  constructor(id) {\n    if (id === undefined) {\n      throw new Error('missing required parameter \"id\"');\n    }\n    this.id = id;\n  }\n\n  static fromRange(range) {\n    //id = $(range.commonAncestorContainer).closest('[id]').attr('id')\n    return new FragmentAnchor(id);\n  }\n\n  static fromSelector(selector) {\n    if (selector === undefined) {\n      throw new Error('missing required parameter \"selector\"');\n    }\n    return new FragmentAnchor(selector.value);\n  }\n\n  toSelector() {\n    return {\n      type: 'FragmentSelector',\n      value: this.id,\n    };\n  }\n\n  toRange() {\n    let el = global.document.getElementById(this.id);\n    let range = global.document.createRange();\n    range.selectNode(el);\n    return range;\n  }\n}\n"],"sourceRoot":"./"}